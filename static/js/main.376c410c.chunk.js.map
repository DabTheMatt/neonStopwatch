{"version":3,"sources":["App2.js","components2/Yoga.js","reportWebVitals.js","index.js"],"names":["App2","Component","state","actualTime","stopBtn","playBtn","times","isCounting","active","achivement","totalTime","playPause","hours","minutes","secunds","preSeconds","preMinutes","lastTime","milisecunds","background","time","setState","parseInt","Math","random","toString","console","log","calcTotal","reduce","p","c","handleStart","timer","setInterval","clearInterval","handlePause","handleStop","tempTimes","push","handleReset","className","style","transform","this","onClick","color","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.376c410c.chunk.js","sourcesContent":["import React from \"react\";\nimport Yoga from \"./components2/Yoga\";\nimport \"../src/App2.css\";\n\nclass App2 extends React.Component {\n  state = {\n    actualTime: 0,\n    stopBtn: false,\n    playBtn: false,\n\n    times: [],\n    isCounting: false,\n    active: \"\",\n    achivement: `&#9813;`,\n    totalTime: 0,\n    playPause: \"gg-play-button-o\",\n    hours: 0,\n    minutes: 0,\n    secunds: 0,\n    preSeconds: 0,\n    preMinutes: 0,\n    lastTime: \"\",\n    milisecunds: 0,\n    background: \"ff006e\"\n  };\n\n\n\n  time = () => {\n    this.setState({\n      actualTime: this.state.actualTime + 1,\n      \n    });\n\n    this.setState({\n        secunds: this.state.actualTime,\n        minutes: parseInt(this.state.actualTime / 60),\n        background: `ff${parseInt(Math.random()*99).toString(16)}6e`\n    })\nconsole.log(this.state.background);\n    if (this.state.secunds < 10) {\n      this.setState({\n        preSeconds: `0`,\n      });\n    } else if (this.state.secunds >= 10) {\n      this.setState({\n        preSeconds: ``,\n        \n      });\n    }\n\n    if (this.state.actualTime > 60) {\n      this.setState({\n        minutes: parseInt(this.state.actualTime / 60),\n        secunds: this.state.actualTime - this.state.minutes * 60,\n      });\n      if (this.state.secunds < 10) {\n        this.setState({\n          preSeconds: `0`,\n        });\n      } else if (this.state.secunds >= 10) {\n        this.setState({\n          preSeconds: ``,\n        });\n      }\n    }\n    if (this.state.minutes > 9) {\n      this.setState({\n        preMinutes: \"\",\n      });\n    }\n  };\n\n  calcTotal = () => {\n    this.setState({\n      totalTime: this.state.times.reduce((p, c) => {\n        return p + c;\n      }),\n    });\n  };\n\n  handleStart = () => {\n    this.setState({\n      playPause: \"gg-play-pause-o\",\n    });\n    if (this.state.isCounting === true) {\n      this.setState({\n        stopBtn: true,\n        isCounting: false,\n        playPause: \"gg-play-button-o\",\n      });\n      return;\n    } else {\n      this.setState({\n        stopBtn: false,\n        active: \"white\",\n      });\n      const timer = setInterval(() => {\n        if (this.state.stopBtn === true) {\n          clearInterval(timer);\n        } else if (this.state.stopBtn === false) {\n          this.setState({\n            isCounting: true,\n          });\n          this.time();\n        }\n      }, 1000);\n    }\n  };\n\n  handlePause = () => {\n    this.setState({});\n  };\n\n  handleStop = () => {\n    const tempTimes = this.state.times;\n    tempTimes.push(this.state.actualTime);\n    this.setState({\n      times: tempTimes,\n\n      stopBtn: true,\n      isCounting: false,\n      active: \"\",\n      playPause: \"gg-play-button-o\",\n      lastTime: `${this.state.minutes} min ${this.state.secunds} sec`,\n    });\n    this.calcTotal();\n  };\n\n  handleReset = () => {\n    this.setState({\n      actualTime: 0,\n      hours: 0,\n      minutes: 0,\n      secunds: 0,\n      preSeconds: 0,\n      preMinutes: 0,\n      isCounting: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"stripsWrapper\">\n        <div\n          className=\"strip a\"\n          style={{\n            transform: `rotateY(0deg) rotate(${-this.state.actualTime}deg)`,\n          }}\n        >\n          <div className=\"resultsWrapper\"></div>\n        </div>\n        <div\n          className=\"strip b\"\n          style={{\n            transform: `rotateY(0deg) rotate(${this.state.actualTime * 3}deg)`,\n          }}\n        ></div>\n        <div className=\"strip c\" \n        >\n            \n          {this.state.lastTime === \"\" ? (\n            <div className=\"mainTitle\">neon stopwatch</div>\n          ) : (\n            <div className=\"lastTime\">Last time: {this.state.lastTime}</div>\n          )}\n\n          <br />\n          <div className=\"clockWrapper\">\n            <div className=\"clock\">\n              {this.state.preMinutes}\n              {this.state.minutes}:{this.state.preSeconds}\n              {this.state.secunds}\n            </div>\n            <div className=\"controlsWrapper\">\n              <div\n                className={`${this.state.playPause} controls`}\n                onClick={this.handleStart}\n                style={{ color: `${this.state.active}` }}\n              ></div>\n\n              <div\n                className=\"gg-play-stop-o controls\"\n                onClick={this.handleStop}\n              ></div>\n            </div>\n            <button onClick={this.handleReset} className=\"reset\">\n              reset\n            </button>\n          </div>\n        </div>\n        <div\n          className=\"strip d\"\n          style={{\n            transform: `rotateY(0deg) rotate(${this.state.actualTime}deg)`,\n          }}\n        >\n          <br />\n\n          <br />\n        </div>\n        <div\n          className=\"strip e\"\n          style={{\n            transform: `rotateY(0deg) rotate(${\n              -this.state.actualTime * 1.5\n            }deg)`,\n          }}\n        ></div>\n        <div className=\"clockWrapper\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App2;\n","import React, { Component } from 'react';\n\nclass Yoga extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.joga.map(el=>{\n                    <div className=\"box\">{el.day}</div>\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Yoga;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App2 from './App2';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App2 />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}